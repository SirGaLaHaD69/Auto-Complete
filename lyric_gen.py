# -*- coding: utf-8 -*-
"""lyric_gen.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12LmioaPI9KJwSaNq6BUl5Pw5EQOJa_M9
"""

import numpy as np

# Transition table
def generate_table(text, k = 4):
    table = {}
    
    # Frequencies
    for i in range(len(text) - k):
        kx = text[i : i + k]
        ky = text[i + k]
        if table.get(kx) is None:
            table[kx] = {}
            table[kx][ky] = 1
        else:
            if table[kx].get(ky) is None:
                table[kx][ky] = 1
            else:
                table[kx][ky] += 1
    
    # Probabilites
    for kx in table.keys():
        s = float(sum(table[kx].values()))
        for ky in table[kx].keys():
            table[kx][ky] /= s
    
    return table

def load_text(filename):
    with open(filename, encoding='utf8') as f:
        return f.read().lower()

text = load_text('Apna Time Aayega_.txt')

model = generate_table(text)

def sample_next(context, model, k = 4):
    context = context[-k : ]
    if model.get(context) is None:
        return ' '
    poss_char = list(model[context].keys())
    poss_prob = list(model[context].values())
    return np.random.choice(a=poss_char, p=poss_prob)

def generate_text(start_sent, model, k=4, maxLen=2000):
    np.random.seed(seed=11)
    sentence = start_sent
    context = sentence[-k : ]
    for i in range(maxLen):
        next_char = sample_next(context, model, k)
        sentence += next_char
        context = sentence[-k : ]
    return sentence

generated_lyrics = generate_text('apna', model)
print(generated_lyrics)

with open('results.txt', 'w+', encoding='utf8') as f:
    f.write(generated_lyrics)